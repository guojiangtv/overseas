<template>
    <div class="rank">
        <ul class="tab">
            <li v-for="(item,index) in 2" :class="['tab-'+index,{active:selected==index}]"  @click="exchangeTab(index)"><span></span></li>
        </ul>
        <div class="scroll-box">
            <ul class="prev-list">
                <li :class="'no'+(index+1)" v-for="(item,index) in prevList(rankList)" :key="index">
                    <div class="avatar-wrap">
                        <div class="crown"></div>
                        <div class="live" v-if="isMod && item.isPlaying == 1"></div>
                        <div class="avatar-box">
                            <img :src="item.headPic" class="avatar" v-if="isMod" @click="goPersonalPage(item.mid)">
                            <img :src="item.headPic" class="avatar" v-else @click="goPersonalPage(item.uid)">
                        </div>
                        <div class="v-icon" v-if="isMod && item.verified == 1"></div>
                        <div class="received-num">
                            <span class="diamond"></span>
                            <span class="num">x{{item.total}}</span>
                        </div>
                    </div>
                    <div class="info">
                        <p class="nickname">{{item.nickname}}</p>
                        <div class="follow-btn following" v-show="item.isFollowing">Following</div>
                        <div class="follow-btn nofollow" v-if="isMod" v-show="!item.isFollowing" @click="attention(item.mid,index)" >Follow</div>
                        <div class="follow-btn nofollow" v-else v-show="!item.isFollowing" @click="attention(item.uid,index)" >Follow</div>
                    </div>
                </li>
            </ul>
            <ul class="last-list">
               <li v-for="(item,index) in lastList(rankList)" :key="index">
                    <div class="avatar-wrap">
                        <div class="index">No.{{index+4}}</div>
                        <div class="avatar-box">
                            <img :src="item.headPic" class="avatar" v-if="isMod" @click="goPersonalPage(item.mid)">
                            <img :src="item.headPic" class="avatar" v-else @click="goPersonalPage(item.uid)">
                        </div>
                        <div class="v-icon" v-if="isMod && item.verified == 1"></div>
                    </div>
                    <div class="info">
                        <div class="received-num">
                            <span class="diamond"></span>
                            <span class="num">x{{item.total}}</span>
                        </div>
                        <div class="live" v-if="isMod && item.isPlaying == 1"></div>
                        <p class="nickname">{{item.nickname}}</p>
                    </div>
                    <div class="follow-btn following" v-show="item.isFollowing">Following</div>
                    <div class="follow-btn nofollow" v-if="isMod" v-show="!item.isFollowing" @click="attention(item.mid,index+3)" >Follow</div>
                    <div class="follow-btn nofollow" v-else v-show="!item.isFollowing" @click="attention(item.uid,index+3)" >Follow</div>
                </li>
            </ul>
        </div>
    </div>
</template>

<script>
import common from 'common';
export default {
    data(){
        return {
            selected: 0,
            isMod:true,//默认类型是主播
            currentPage:0,
            rankList:[],//当前列表数据
            mRanks: [], //主播排行榜
            uRanks: [], //用户排行榜
        }
    },
    // props: ['message'],
    mounted:function(){
        this.getModRank();
        this.getUserRank();
    },
    methods:{
        //榜单切换
        exchangeTab(index) {
            this.selected = index;
            this.currentPage = 0;
            if(index == 0){
                this.isMod = true;
                this.rankList = this.mRanks;
            }else{
                this.isMod = false;
                this.rankList = this.uRanks;
            }
        },
        //ajax获取主播榜单数据
        getModRank(){
            this.axios.get('/Winner3Activity/GetModRank', {
                    params: {
                        page: this.currentPage,
                    }
                })
                .then(res => {
                    let data = res.data.data;
                    console.log('主播榜数据',data);
                    if (data.list.length > 0) {
                        this.mRanks = this.mRanks.concat(data.list);
                        this.scrollLock = false;
                    }
                })
                .then(res => {
                    this.rankList = this.mRanks;
                })
                .catch(err => {
                    console.log(err);
                });
        },
        //ajax获取用户榜单数据
        getUserRank(){
            this.axios.get('/Winner3Activity/GetUserRank', {
                    params: {
                        page: this.currentPage,
                    }
                })
                .then(res => {
                    let data = res.data.data;
                    console.log('用户榜数据',data);
                    if (data.list.length > 0) {
                        this.uRanks = this.uRanks.concat(data.list);
                        this.scrollLock = false;
                    }
                })
                .catch(err => {
                    console.log(err);
                });
        },
        prevList(){
            return this.rankList.filter((item,index)=>{
                return index < 3;
            })
        },
        lastList(){
            return this.rankList.filter((item,index)=>{
                return index >= 3;
            })
        },
        //滚动加载绑定
        scrollLoad(ele, bottomHeight, callback) {
            let _ele = document.querySelector(ele),
                bH = bottomHeight || 100;
            _ele.addEventListener('scroll', ()=>{
                let scrollHeight = this.scrollHeight,
                    cliHeight = this.clientHeight,
                    scrollTop = this.scrollTop;
                if (scrollHeight - cliHeight - scrollTop < bH) {
                    callback();
                }
            }, false);
        },
        //点击头像，进入个人主页
        goPersonalPage(id) {
            common.goPersonalPage(id);
        },
        //点击关注按钮，关注主播
        attention(mid, index) {
            this.axios.get('/Winner3Activity/Attention', {
                    params: {
                        mid: mid
                    }
                })
                .then(res => {
                    if (typeof data == 'string') {
                        data = JSON.parse(data);
                    }
                    let _data = res.data;
                    console.log(_data);
                    if (_data.errno == 0) {
                        this.rankList[index].isFollowing = true;
                    } else {
                        console.log(_data.msg);
                    }
                })
                .catch(err => {
                    console.log(err);
                });
        }
    }
}
</script>

<style>
    .tab li{ float: left; width: 50%; }
    .tab li span{display: inline-block; }
</style>
